---
name: chrome

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/release.yml
      - build.sh
  schedule:
    - cron: 0 23 * * *

permissions: write-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - {channel: stable, variant: stable}
          - {channel: beta, variant: beta}
          - {channel: dev, variant: unstable}
    runs-on: ubuntu-latest
    name: build
    steps:
      - name: check if we need to trigger a build
        id: check
        run: |
          VERSION=$(wget -q 'https://chromiumdash.appspot.com/fetch_releases?channel=${{matrix.channel}}&platform=Linux&num=1' -O - | jq -r '.[0].version')
          echo "version=$VERSION" >> "$GITHUB_ENV"
          if ! wget --spider "https://github.com/${{github.repository}}/releases/download/${{matrix.channel}}/google-chrome-${{matrix.channel}}-${VERSION}-x86_64.AppImage" > /dev/null 2>&1; then
          echo "trigger=true" >> "$GITHUB_ENV"
          echo "Build ${{matrix.channel}} $VERSION"
          else
          echo "trigger=false" >> "$GITHUB_ENV"
          echo "Skip ${{matrix.channel}} $VERSION"
          fi
          if [ -z $VERSION ]; then
          echo "trigger=false" >> "$GITHUB_ENV"
          echo "No VERSION found"
          fi

      - name: checkout
        if: env.trigger == 'true'
        uses: actions/checkout@main

      - name: build
        if: env.trigger == 'true'
        env:
          VERSION: ${{ env.version }}
          CHANNEL: ${{ matrix.channel }}
          VARIANT: ${{ matrix.variant }}
        run: |
          sudo apt update
          sudo apt install libfuse2
          bash build.sh
          cp "google-chrome-${CHANNEL}-${VERSION}-x86_64.tar.xz" "google-chrome-${CHANNEL}-x86_64.tar.xz"
          cp "google-chrome-${CHANNEL}-${VERSION}-x86_64.AppImage" "google-chrome-${CHANNEL}-x86_64.AppImage"
          shasum -a 1 google-chrome-* > SHA1SUMS

      - name: create release note
        if: env.trigger == 'true'
        run: |
          echo "Build date: $(date '+%Y-%m-%d %H:%M:%S')" > note.md
          echo '### SHA1 Checksums' >> note.md
          echo '```' >> note.md  # Do not use double quotes
          cat SHA1SUMS >> note.md
          echo '```' >> note.md
          cat note.md

      - name: Release non-stable
        if: matrix.channel != 'stable' && env.trigger == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.version }}
          CHANNEL: ${{ matrix.channel }}
        run: |
          gh release delete "${CHANNEL}" --cleanup-tag --yes --repo "${{github.repository}}" || true
          sleep 2 # wait for the tag to be deleted
          gh release create "${CHANNEL}" --prerelease --notes-file note.md --title "${CHANNEL} ${VERSION}" --repo "${{github.repository}}"
          gh release upload "${CHANNEL}" ./google-chrome-* --clobber --repo "${{github.repository}}"
          gh release upload "${CHANNEL}" ./SHA1SUMS --clobber --repo "${{github.repository}}"

      - name: Release stable
        if: matrix.channel == 'stable' && env.trigger == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.version }}
          CHANNEL: ${{ matrix.channel }}
        run: |
          gh release delete "${CHANNEL}" --cleanup-tag --yes --repo "${{github.repository}}" || true
          sleep 2 # wait for the tag to be deleted
          gh release create "${CHANNEL}" --notes-file note.md --title "${CHANNEL} ${VERSION}" --repo "${{github.repository}}"
          gh release upload "${CHANNEL}" ./google-chrome-* --clobber --repo "${{github.repository}}"
          gh release upload "${CHANNEL}" ./SHA1SUMS --clobber --repo "${{github.repository}}"

          gh release create "${VERSION}" --latest --notes-file note.md --title "${CHANNEL} ${VERSION}" --repo "${{github.repository}}" || true
          gh release edit "${VERSION}" --latest --notes-file note.md --title "${CHANNEL} ${VERSION}" --repo "${{github.repository}}" || true
          gh release upload "${VERSION}" "google-chrome-${CHANNEL}-${VERSION}-x86_64.AppImage" --clobber --repo "${{github.repository}}"
          gh release upload "${VERSION}" "google-chrome-${CHANNEL}-${VERSION}-x86_64.tar.xz" --clobber --repo "${{github.repository}}"
          gh release upload "${VERSION}" ./SHA1SUMS --clobber --repo "${{github.repository}}"

  keepalive-job:
    name: Keepalive Workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: gautamkrishnar/keepalive-workflow@v2
